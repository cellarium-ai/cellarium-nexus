[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning[plugin]"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "cellarium-nexus"
description = "Platform for managing scRNA-seq data"
authors = ["Cellarium Nexus <cas-support@broadinstitute.org>"]
readme = "README.rst"
license = "BSD-3-Clause"
packages = [{ include = "cellarium", from = "." }]
version = "0.0.0"

[tool.poetry.urls]
Homepage = "https://cellarium.ai"
"Source Code" = "https://github.com/cellarium-ai/cellarium-nexus"
"Bug Tracker" = "https://github.com/cellarium-ai/cellarium-nexus/issues"
"Discussion Forum" = "https://github.com/cellarium-ai/cellarium-nexus/discussions"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
# Shared/runtime dependencies (from requirements/shared.txt)
pydantic = "==2.10.5"
google-cloud-storage = "==2.15.0"
PyYAML = ">=6.0.2,<7.0.0"
smart-open = "==7.0.4"
google-cloud-bigquery = "==3.28.0"
google-cloud-bigquery-storage = "==2.28.0"
fastavro = "==1.10.0"
py-avro-schema = "==3.8.2"
h5py = "==3.12.1"
anndata = "==0.10.8"
Mako = "==1.3.9"
db-dtypes = "==1.4.1"
fsspec = "==2025.2.0"
gcsfs = "==2025.2.0"
certifi = "==2025.1.31"
tenacity = "==9.0.0"
sqlparse = "==0.5.3"
cellarium-schema = { git = "https://github.com/cellarium-ai/validate-schema.git", rev = "fg-fix-warning" }

[tool.poetry.group.backend]
optional = true

[tool.poetry.group.backend.dependencies]
django = "==5.1.4"
psycopg-binary = "==3.2.3"
psycopg = "==3.2.3"
django-environ = "==0.11.2"
django-unfold = "==0.65.0"
pygments = "==2.19.1"
django-ninja = "==1.3.0"
djangorestframework = "==3.15.2"
django-storages = "==1.14.4"
django-json-widget = "==2.0.1"
kfp = "==2.10.1"
google-cloud-pipeline-components = "==2.19.0"
pandas = "==2.2.3"

[tool.poetry.group.pipelines]
optional = true

[tool.poetry.group.pipelines.dependencies]
# If you wish to separate pipeline-only deps, add here. For now, kfp et al. live under backend.

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "==8.4.2"
pytest-cov = "^5.0.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.9"
black = "^24.8.0"
mypy = "^1.11.0"
poethepoet = "^0.29.0"
pre-commit = "^4.3.0"

[tool.poetry-dynamic-versioning]
enable = true

[tool.poe.tasks]
test = "pytest"
unit = "pytest -m unit"
integration = "pytest -m integration"

lint.sequence = [
  { cmd = "ruff check ." },
  { cmd = "black --check ." },
]

format.sequence = [
  { cmd = "ruff check . --fix" },
  { cmd = "black ." },
]

export-backend-reqs = "poetry export --only main,backend --without-hashes -f requirements.txt -o deploy/requirements/backend.lock.txt"
export-workflows-reqs = "poetry export --only main --without-hashes -f requirements.txt -o deploy/requirements/workflows.lock.txt"

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120

[tool.ruff.lint]
extend-select = ["I"]
