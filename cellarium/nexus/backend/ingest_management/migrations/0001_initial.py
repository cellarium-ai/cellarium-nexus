# Generated by Django 5.1.4 on 2025-04-17 17:24

import uuid

import django.db.models.deletion
from django.db import migrations, models

import cellarium.nexus.backend.ingest_management.utils.column_mapping


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("cell_management", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="ColumnMapping",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="name")),
                ("description", models.TextField(blank=True, null=True, verbose_name="description")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
            ],
            options={
                "verbose_name": "column mapping",
                "verbose_name_plural": "column mappings",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="IndexTracking",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("table_object_id", models.PositiveIntegerField(default=0, verbose_name="table object id")),
                ("largest_index", models.BigIntegerField(default=0, verbose_name="largest assigned index")),
                (
                    "content_type",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ingest_management_indextracking",
                        to="contenttypes.contenttype",
                        verbose_name="tracked model",
                    ),
                ),
            ],
            options={
                "verbose_name": "Index Tracking",
                "verbose_name_plural": "Index Tracking Entries",
            },
        ),
        migrations.CreateModel(
            name="IngestInfo",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("nexus_uuid", models.UUIDField(default=uuid.uuid4, unique=True, verbose_name="nexus uuid")),
                (
                    "status",
                    models.CharField(
                        choices=[("STARTED", "Started"), ("SUCCEEDED", "Succeeded"), ("FAILED", "Failed")],
                        default="STARTED",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                ("metadata_extra", models.JSONField(blank=True, null=True, verbose_name="metadata extra")),
                (
                    "ingest_start_timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="ingest start timestamp"),
                ),
                (
                    "ingest_finish_timestamp",
                    models.DateTimeField(blank=True, null=True, verbose_name="ingest finish timestamp"),
                ),
                (
                    "column_mapping",
                    models.JSONField(
                        blank=True,
                        help_text="Mapping of input column names to schema column names",
                        null=True,
                        verbose_name="column mapping",
                    ),
                ),
                (
                    "bigquery_dataset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ingest_management_ingests",
                        to="cell_management.bigquerydataset",
                        verbose_name="BigQuery dataset",
                    ),
                ),
            ],
            options={
                "verbose_name": "ingest info",
                "verbose_name_plural": "ingest info objects",
            },
        ),
        migrations.CreateModel(
            name="ObsColumnMapping",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("input_column", models.CharField(max_length=255, verbose_name="input column")),
                (
                    "schema_column",
                    models.CharField(
                        choices=cellarium.nexus.backend.ingest_management.utils.column_mapping.get_obs_column_choices,
                        max_length=255,
                        verbose_name="schema column",
                    ),
                ),
                (
                    "mapping",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="obs_mappings",
                        to="ingest_management.columnmapping",
                    ),
                ),
            ],
            options={
                "verbose_name": "obs column mapping",
                "verbose_name_plural": "obs column mappings",
                "unique_together": {("mapping", "input_column"), ("mapping", "schema_column")},
            },
        ),
        migrations.CreateModel(
            name="VarColumnMapping",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("input_column", models.CharField(max_length=255, verbose_name="input column")),
                (
                    "schema_column",
                    models.CharField(
                        choices=cellarium.nexus.backend.ingest_management.utils.column_mapping.get_var_column_choices,
                        max_length=255,
                        verbose_name="schema column",
                    ),
                ),
                (
                    "mapping",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="var_mappings",
                        to="ingest_management.columnmapping",
                    ),
                ),
            ],
            options={
                "verbose_name": "var column mapping",
                "verbose_name_plural": "var column mappings",
                "unique_together": {("mapping", "input_column"), ("mapping", "schema_column")},
            },
        ),
    ]
