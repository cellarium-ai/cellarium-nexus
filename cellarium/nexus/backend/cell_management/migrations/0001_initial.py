# Generated by Django 5.1.4 on 2025-04-17 17:24

from django.db import migrations, models

import cellarium.nexus.backend.cell_management.models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BigQueryDataset",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=256, unique=True, verbose_name="name")),
                ("description", models.TextField(blank=True, null=True, verbose_name="description")),
                ("link", models.CharField(blank=True, max_length=512, null=True, unique=True, verbose_name="link")),
            ],
            options={
                "verbose_name": "BigQuery dataset",
                "verbose_name_plural": "BigQuery datasets",
            },
        ),
        migrations.CreateModel(
            name="CellFeatureInfo",
            fields=[
                ("id", models.BigAutoField(editable=False, primary_key=True, serialize=False, verbose_name="ID")),
                ("ensemble_id", models.CharField(max_length=256, verbose_name="ensemble id")),
                ("symbol", models.CharField(max_length=255, verbose_name="symbol")),
                ("biotype", models.CharField(blank=True, max_length=255, null=True, verbose_name="biotype")),
                ("is_filtered", models.BooleanField(blank=True, null=True, verbose_name="is filtered")),
                ("reference", models.CharField(blank=True, max_length=255, null=True, verbose_name="reference")),
                ("tag", models.CharField(db_index=True, max_length=64, null=True, verbose_name="tag")),
                (
                    "metadata_extra",
                    models.JSONField(
                        blank=True,
                        default=cellarium.nexus.backend.cell_management.models.default_empty_dict,
                        null=True,
                        verbose_name="metadata extra",
                    ),
                ),
            ],
            options={
                "verbose_name": "cell feature info",
                "verbose_name_plural": "cell feature info objects",
            },
        ),
        migrations.CreateModel(
            name="CellInfo",
            fields=[
                ("id", models.BigAutoField(editable=False, primary_key=True, serialize=False, verbose_name="ID")),
                ("original_id", models.CharField(max_length=256, unique=True, verbose_name="original id")),
                ("tag", models.CharField(db_index=True, max_length=64, null=True, verbose_name="tag")),
                (
                    "metadata_extra",
                    models.JSONField(
                        blank=True,
                        default=cellarium.nexus.backend.cell_management.models.default_empty_dict,
                        null=True,
                        verbose_name="metadata extra",
                    ),
                ),
                ("donor_id", models.CharField(blank=True, max_length=256, null=True, verbose_name="donor id")),
                ("cell_type", models.CharField(db_index=True, max_length=256, verbose_name="cell type")),
                ("assay", models.CharField(blank=True, db_index=True, max_length=256, null=True, verbose_name="assay")),
                (
                    "development_stage",
                    models.CharField(
                        blank=True, db_index=True, max_length=256, null=True, verbose_name="development stage"
                    ),
                ),
                (
                    "tissue",
                    models.CharField(blank=True, db_index=True, max_length=256, null=True, verbose_name="tissue"),
                ),
                (
                    "disease",
                    models.CharField(blank=True, db_index=True, max_length=256, null=True, verbose_name="disease"),
                ),
                (
                    "organism",
                    models.CharField(blank=True, db_index=True, max_length=256, null=True, verbose_name="organism"),
                ),
                (
                    "self_reported_ethnicity",
                    models.CharField(
                        blank=True, db_index=True, max_length=256, null=True, verbose_name="self-reported ethnicity"
                    ),
                ),
                ("sex", models.CharField(blank=True, db_index=True, max_length=256, null=True, verbose_name="sex")),
                (
                    "suspension_type",
                    models.CharField(
                        blank=True, db_index=True, max_length=256, null=True, verbose_name="suspension type"
                    ),
                ),
                (
                    "total_mrna_umis",
                    models.IntegerField(blank=True, db_index=True, null=True, verbose_name="total mrna umis"),
                ),
                (
                    "cell_type_ontology_term_id",
                    models.CharField(
                        blank=True, db_index=True, max_length=256, null=True, verbose_name="cell type ontology term id"
                    ),
                ),
                (
                    "assay_ontology_term_id",
                    models.CharField(blank=True, max_length=256, null=True, verbose_name="assay ontology term id"),
                ),
                (
                    "development_stage_ontology_term_id",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="development stage ontology term id"
                    ),
                ),
                (
                    "tissue_ontology_term_id",
                    models.CharField(blank=True, max_length=256, null=True, verbose_name="tissue ontology term id"),
                ),
                (
                    "disease_ontology_term_id",
                    models.CharField(blank=True, max_length=256, null=True, verbose_name="disease ontology term id"),
                ),
                (
                    "organism_ontology_term_id",
                    models.CharField(blank=True, max_length=256, null=True, verbose_name="organism ontology term id"),
                ),
                (
                    "self_reported_ethnicity_ontology_term_id",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="self-reported ethnicity ontology term id"
                    ),
                ),
                (
                    "sex_ontology_term_id",
                    models.CharField(blank=True, max_length=256, null=True, verbose_name="sex ontology term id"),
                ),
            ],
            options={
                "verbose_name": "cell info",
                "verbose_name_plural": "cel info objects",
            },
        ),
        migrations.CreateModel(
            name="FeatureInfo",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("ensemble_id", models.CharField(max_length=255, unique=True, verbose_name="ensemble id")),
                ("symbol", models.CharField(max_length=255, verbose_name="symbol")),
            ],
            options={
                "verbose_name": "feature info",
                "verbose_name_plural": "feature info objects",
            },
        ),
        migrations.CreateModel(
            name="FeatureSchema",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="name")),
            ],
            options={
                "verbose_name": "feature schema",
                "verbose_name_plural": "feature schemas",
            },
        ),
    ]
